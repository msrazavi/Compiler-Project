Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID ';'
    7                | type_specifier ID '[' NUM ']' ';'

    8 type_specifier: "int"
    9               | "void"

   10 fun_declaration: type_specifier ID '(' params ')' compound_stmt

   11 params: param_list
   12       | "void"

   13 param_list: param_list ',' param
   14           | param

   15 param: type_specifier ID
   16      | type_specifier ID '[' ']'

   17 compound_stmt: '{' start_scope local_declarations statement_list end_scope '}'

   18 local_declarations: local_declarations var_declaration
   19                   | /* empty */

   20 statement_list: statement_list statement
   21               | /* empty */

   22 statement: expression_stmt
   23          | compound_stmt
   24          | selection_stmt
   25          | iteration_stmt
   26          | return_stmt
   27          | switch_stmt

   28 expression_stmt: expression ';'
   29                | "break" ';'
   30                | ';'

   31 selection_stmt: "if" '(' expression ')' save statement "endif" "action_if"
   32               | "if" '(' expression ')' save statement save "else" label statement "endif" "action_ifelse"

   33 iteration_stmt: "while" '(' expression ')' statement "action_while_loop"

   34 return_stmt: "return" ';'
   35            | "return" expression ';'

   36 switch_stmt: "switch" '(' expression ')' '{' case_stmts default_stmt '}'

   37 case_stmts: case_stmts case_stmt
   38           | /* empty */

   39 case_stmt: "case" save_const NUM ':' statement_list

   40 default_stmt: "default" ':' statement_list
   41             | /* empty */

   42 expression: var '=' expression
   43           | simple_expression

   44 var: push_id ID
   45    | push_id ID '[' expression ']' "action_index_addr"

   46 simple_expression: additive_expression '<' additive_expression "action_lt"
   47                  | additive_expression "==" additive_expression "action_eq"
   48                  | additive_expression

   49 additive_expression: additive_expression '+' term "action_add"
   50                    | additive_expression '-' term "action_sub"
   51                    | term

   52 term: term '*' factor "action_mult"
   53     | term '/' factor "action_div"
   54     | factor

   55 factor: '(' expression ')'
   56       | var
   57       | call
   58       | save_const NUM

   59 call: "output" '(' output expression ')'
   60     | ID '(' args ')'

   61 args: arg_list
   62     | /* empty */

   63 arg_list: arg_list ',' expression
   64         | expression

   65 start_scope: "action_start_scope"

   66 end_scope: "action_end_scope"

   67 push_id: "action_push_id"

   68 save_const: "action_save_const"

   69 save: "action_save"

   70 label: "action_label"

   71 output: "action_output"


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 31 32 33 36 55 59 60
')' (41) 10 31 32 33 36 55 59 60
'*' (42) 52
'+' (43) 49
',' (44) 13 63
'-' (45) 50
'/' (47) 53
':' (58) 39 40
';' (59) 6 7 28 29 30 34 35
'<' (60) 46
'=' (61) 42
'[' (91) 7 16 45
']' (93) 7 16 45
'{' (123) 17 36
'}' (125) 17 36
error (256)
NUM (258) 7 39 58
ID (259) 6 7 10 15 16 44 45 60
"int" (260) 8
"void" (261) 9 12
"break" (262) 29
"if" (263) 31 32
"endif" (264) 31 32
"action_if" (265) 31
"else" (266) 32
"action_ifelse" (267) 32
"while" (268) 33
"action_while_loop" (269) 33
"return" (270) 34 35
"switch" (271) 36
"case" (272) 39
"default" (273) 40
"action_index_addr" (274) 45
"action_lt" (275) 46
"==" (276) 47
"action_eq" (277) 47
"action_add" (278) 49
"action_sub" (279) 50
"action_mult" (280) 52
"action_div" (281) 53
"output" (282) 59
"action_start_scope" (283) 65
"action_end_scope" (284) 66
"action_push_id" (285) 67
"action_save_const" (286) 68
"action_save" (287) 69
"action_label" (288) 70
"action_output" (289) 71


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
declaration_list (52)
    on left: 2 3, on right: 1 2
declaration (53)
    on left: 4 5, on right: 2 3
var_declaration (54)
    on left: 6 7, on right: 4 18
type_specifier (55)
    on left: 8 9, on right: 6 7 10 15 16
fun_declaration (56)
    on left: 10, on right: 5
params (57)
    on left: 11 12, on right: 10
param_list (58)
    on left: 13 14, on right: 11 13
param (59)
    on left: 15 16, on right: 13 14
compound_stmt (60)
    on left: 17, on right: 10 23
local_declarations (61)
    on left: 18 19, on right: 17 18
statement_list (62)
    on left: 20 21, on right: 17 20 39 40
statement (63)
    on left: 22 23 24 25 26 27, on right: 20 31 32 33
expression_stmt (64)
    on left: 28 29 30, on right: 22
selection_stmt (65)
    on left: 31 32, on right: 24
iteration_stmt (66)
    on left: 33, on right: 25
return_stmt (67)
    on left: 34 35, on right: 26
switch_stmt (68)
    on left: 36, on right: 27
case_stmts (69)
    on left: 37 38, on right: 36 37
case_stmt (70)
    on left: 39, on right: 37
default_stmt (71)
    on left: 40 41, on right: 36
expression (72)
    on left: 42 43, on right: 28 31 32 33 35 36 42 45 55 59 63 64
var (73)
    on left: 44 45, on right: 42 56
simple_expression (74)
    on left: 46 47 48, on right: 43
additive_expression (75)
    on left: 49 50 51, on right: 46 47 48 49 50
term (76)
    on left: 52 53 54, on right: 49 50 51 52 53
factor (77)
    on left: 55 56 57 58, on right: 52 53 54
call (78)
    on left: 59 60, on right: 57
args (79)
    on left: 61 62, on right: 60
arg_list (80)
    on left: 63 64, on right: 61 63
start_scope (81)
    on left: 65, on right: 17
end_scope (82)
    on left: 66, on right: 17
push_id (83)
    on left: 67, on right: 44 45
save_const (84)
    on left: 68, on right: 39 58
save (85)
    on left: 69, on right: 31 32
label (86)
    on left: 70, on right: 32
output (87)
    on left: 71, on right: 59


state 0

    0 $accept: . program $end
    1 program: . declaration_list
    2 declaration_list: . declaration_list declaration
    3                 | . declaration
    4 declaration: . var_declaration
    5            | . fun_declaration
    6 var_declaration: . type_specifier ID ';'
    7                | . type_specifier ID '[' NUM ']' ';'
    8 type_specifier: . "int"
    9               | . "void"
   10 fun_declaration: . type_specifier ID '(' params ')' compound_stmt

    "int"   shift, and go to state 1
    "void"  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


state 1

    8 type_specifier: "int" .

    $default  reduce using rule 8 (type_specifier)


state 2

    9 type_specifier: "void" .

    $default  reduce using rule 9 (type_specifier)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 9


state 4

    1 program: declaration_list .  [$end]
    2 declaration_list: declaration_list . declaration
    4 declaration: . var_declaration
    5            | . fun_declaration
    6 var_declaration: . type_specifier ID ';'
    7                | . type_specifier ID '[' NUM ']' ';'
    8 type_specifier: . "int"
    9               | . "void"
   10 fun_declaration: . type_specifier ID '(' params ')' compound_stmt

    "int"   shift, and go to state 1
    "void"  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


state 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


state 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


state 7

    6 var_declaration: type_specifier . ID ';'
    7                | type_specifier . ID '[' NUM ']' ';'
   10 fun_declaration: type_specifier . ID '(' params ')' compound_stmt

    ID  shift, and go to state 11


state 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


state 9

    0 $accept: program $end .

    $default  accept


state 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


state 11

    6 var_declaration: type_specifier ID . ';'
    7                | type_specifier ID . '[' NUM ']' ';'
   10 fun_declaration: type_specifier ID . '(' params ')' compound_stmt

    ';'  shift, and go to state 12
    '['  shift, and go to state 13
    '('  shift, and go to state 14


state 12

    6 var_declaration: type_specifier ID ';' .

    $default  reduce using rule 6 (var_declaration)


state 13

    7 var_declaration: type_specifier ID '[' . NUM ']' ';'

    NUM  shift, and go to state 15


state 14

    8 type_specifier: . "int"
    9               | . "void"
   10 fun_declaration: type_specifier ID '(' . params ')' compound_stmt
   11 params: . param_list
   12       | . "void"
   13 param_list: . param_list ',' param
   14           | . param
   15 param: . type_specifier ID
   16      | . type_specifier ID '[' ']'

    "int"   shift, and go to state 1
    "void"  shift, and go to state 16

    type_specifier  go to state 17
    params          go to state 18
    param_list      go to state 19
    param           go to state 20


state 15

    7 var_declaration: type_specifier ID '[' NUM . ']' ';'

    ']'  shift, and go to state 21


state 16

    9 type_specifier: "void" .  [ID]
   12 params: "void" .  [')']

    ')'       reduce using rule 12 (params)
    $default  reduce using rule 9 (type_specifier)


state 17

   15 param: type_specifier . ID
   16      | type_specifier . ID '[' ']'

    ID  shift, and go to state 22


state 18

   10 fun_declaration: type_specifier ID '(' params . ')' compound_stmt

    ')'  shift, and go to state 23


state 19

   11 params: param_list .  [')']
   13 param_list: param_list . ',' param

    ','  shift, and go to state 24

    $default  reduce using rule 11 (params)


state 20

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


state 21

    7 var_declaration: type_specifier ID '[' NUM ']' . ';'

    ';'  shift, and go to state 25


state 22

   15 param: type_specifier ID .  [')', ',']
   16      | type_specifier ID . '[' ']'

    '['  shift, and go to state 26

    $default  reduce using rule 15 (param)


state 23

   10 fun_declaration: type_specifier ID '(' params ')' . compound_stmt
   17 compound_stmt: . '{' start_scope local_declarations statement_list end_scope '}'

    '{'  shift, and go to state 27

    compound_stmt  go to state 28


state 24

    8 type_specifier: . "int"
    9               | . "void"
   13 param_list: param_list ',' . param
   15 param: . type_specifier ID
   16      | . type_specifier ID '[' ']'

    "int"   shift, and go to state 1
    "void"  shift, and go to state 2

    type_specifier  go to state 17
    param           go to state 29


state 25

    7 var_declaration: type_specifier ID '[' NUM ']' ';' .

    $default  reduce using rule 7 (var_declaration)


state 26

   16 param: type_specifier ID '[' . ']'

    ']'  shift, and go to state 30


state 27

   17 compound_stmt: '{' . start_scope local_declarations statement_list end_scope '}'
   65 start_scope: . "action_start_scope"

    "action_start_scope"  shift, and go to state 31

    start_scope  go to state 32


state 28

   10 fun_declaration: type_specifier ID '(' params ')' compound_stmt .

    $default  reduce using rule 10 (fun_declaration)


state 29

   13 param_list: param_list ',' param .

    $default  reduce using rule 13 (param_list)


state 30

   16 param: type_specifier ID '[' ']' .

    $default  reduce using rule 16 (param)


state 31

   65 start_scope: "action_start_scope" .

    $default  reduce using rule 65 (start_scope)


state 32

   17 compound_stmt: '{' start_scope . local_declarations statement_list end_scope '}'
   18 local_declarations: . local_declarations var_declaration
   19                   | .

    $default  reduce using rule 19 (local_declarations)

    local_declarations  go to state 33


state 33

    6 var_declaration: . type_specifier ID ';'
    7                | . type_specifier ID '[' NUM ']' ';'
    8 type_specifier: . "int"
    9               | . "void"
   17 compound_stmt: '{' start_scope local_declarations . statement_list end_scope '}'
   18 local_declarations: local_declarations . var_declaration
   20 statement_list: . statement_list statement
   21               | .  [ID, ';', '(', '{', "break", "if", "while", "return", "switch", "output", "action_end_scope", "action_push_id", "action_save_const"]

    "int"   shift, and go to state 1
    "void"  shift, and go to state 2

    $default  reduce using rule 21 (statement_list)

    var_declaration  go to state 34
    type_specifier   go to state 35
    statement_list   go to state 36


state 34

   18 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 18 (local_declarations)


state 35

    6 var_declaration: type_specifier . ID ';'
    7                | type_specifier . ID '[' NUM ']' ';'

    ID  shift, and go to state 37


state 36

   17 compound_stmt: . '{' start_scope local_declarations statement_list end_scope '}'
   17              | '{' start_scope local_declarations statement_list . end_scope '}'
   20 statement_list: statement_list . statement
   22 statement: . expression_stmt
   23          | . compound_stmt
   24          | . selection_stmt
   25          | . iteration_stmt
   26          | . return_stmt
   27          | . switch_stmt
   28 expression_stmt: . expression ';'
   29                | . "break" ';'
   30                | . ';'
   31 selection_stmt: . "if" '(' expression ')' save statement "endif" "action_if"
   32               | . "if" '(' expression ')' save statement save "else" label statement "endif" "action_ifelse"
   33 iteration_stmt: . "while" '(' expression ')' statement "action_while_loop"
   34 return_stmt: . "return" ';'
   35            | . "return" expression ';'
   36 switch_stmt: . "switch" '(' expression ')' '{' case_stmts default_stmt '}'
   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   66 end_scope: . "action_end_scope"
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    ';'                  shift, and go to state 39
    '('                  shift, and go to state 40
    '{'                  shift, and go to state 27
    "break"              shift, and go to state 41
    "if"                 shift, and go to state 42
    "while"              shift, and go to state 43
    "return"             shift, and go to state 44
    "switch"             shift, and go to state 45
    "output"             shift, and go to state 46
    "action_end_scope"   shift, and go to state 47
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    compound_stmt        go to state 50
    statement            go to state 51
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    switch_stmt          go to state 56
    expression           go to state 57
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    end_scope            go to state 64
    push_id              go to state 65
    save_const           go to state 66


state 37

    6 var_declaration: type_specifier ID . ';'
    7                | type_specifier ID . '[' NUM ']' ';'

    ';'  shift, and go to state 12
    '['  shift, and go to state 13


state 38

   60 call: ID . '(' args ')'

    '('  shift, and go to state 67


state 39

   30 expression_stmt: ';' .

    $default  reduce using rule 30 (expression_stmt)


state 40

   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   55       | '(' . expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    expression           go to state 68
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 41

   29 expression_stmt: "break" . ';'

    ';'  shift, and go to state 69


state 42

   31 selection_stmt: "if" . '(' expression ')' save statement "endif" "action_if"
   32               | "if" . '(' expression ')' save statement save "else" label statement "endif" "action_ifelse"

    '('  shift, and go to state 70


state 43

   33 iteration_stmt: "while" . '(' expression ')' statement "action_while_loop"

    '('  shift, and go to state 71


state 44

   34 return_stmt: "return" . ';'
   35            | "return" . expression ';'
   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    ';'                  shift, and go to state 72
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    expression           go to state 73
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 45

   36 switch_stmt: "switch" . '(' expression ')' '{' case_stmts default_stmt '}'

    '('  shift, and go to state 74


state 46

   59 call: "output" . '(' output expression ')'

    '('  shift, and go to state 75


state 47

   66 end_scope: "action_end_scope" .

    $default  reduce using rule 66 (end_scope)


state 48

   67 push_id: "action_push_id" .

    $default  reduce using rule 67 (push_id)


state 49

   68 save_const: "action_save_const" .

    $default  reduce using rule 68 (save_const)


state 50

   23 statement: compound_stmt .

    $default  reduce using rule 23 (statement)


state 51

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


state 52

   22 statement: expression_stmt .

    $default  reduce using rule 22 (statement)


state 53

   24 statement: selection_stmt .

    $default  reduce using rule 24 (statement)


state 54

   25 statement: iteration_stmt .

    $default  reduce using rule 25 (statement)


state 55

   26 statement: return_stmt .

    $default  reduce using rule 26 (statement)


state 56

   27 statement: switch_stmt .

    $default  reduce using rule 27 (statement)


state 57

   28 expression_stmt: expression . ';'

    ';'  shift, and go to state 76


state 58

   42 expression: var . '=' expression
   56 factor: var .  [';', ']', ')', ',', '<', "==", '+', '-', '*', '/']

    '='  shift, and go to state 77

    $default  reduce using rule 56 (factor)


state 59

   43 expression: simple_expression .

    $default  reduce using rule 43 (expression)


state 60

   46 simple_expression: additive_expression . '<' additive_expression "action_lt"
   47                  | additive_expression . "==" additive_expression "action_eq"
   48                  | additive_expression .  [';', ']', ')', ',']
   49 additive_expression: additive_expression . '+' term "action_add"
   50                    | additive_expression . '-' term "action_sub"

    '<'   shift, and go to state 78
    "=="  shift, and go to state 79
    '+'   shift, and go to state 80
    '-'   shift, and go to state 81

    $default  reduce using rule 48 (simple_expression)


state 61

   51 additive_expression: term .  [';', ']', ')', ',', '<', "action_lt", "==", "action_eq", '+', '-']
   52 term: term . '*' factor "action_mult"
   53     | term . '/' factor "action_div"

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 51 (additive_expression)


state 62

   54 term: factor .

    $default  reduce using rule 54 (term)


state 63

   57 factor: call .

    $default  reduce using rule 57 (factor)


state 64

   17 compound_stmt: '{' start_scope local_declarations statement_list end_scope . '}'

    '}'  shift, and go to state 84


state 65

   44 var: push_id . ID
   45    | push_id . ID '[' expression ']' "action_index_addr"

    ID  shift, and go to state 85


state 66

   58 factor: save_const . NUM

    NUM  shift, and go to state 86


state 67

   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   60     | ID '(' . args ')'
   61 args: . arg_list
   62     | .  [')']
   63 arg_list: . arg_list ',' expression
   64         | . expression
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    $default  reduce using rule 62 (args)

    expression           go to state 87
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    args                 go to state 88
    arg_list             go to state 89
    push_id              go to state 65
    save_const           go to state 66


state 68

   55 factor: '(' expression . ')'

    ')'  shift, and go to state 90


state 69

   29 expression_stmt: "break" ';' .

    $default  reduce using rule 29 (expression_stmt)


state 70

   31 selection_stmt: "if" '(' . expression ')' save statement "endif" "action_if"
   32               | "if" '(' . expression ')' save statement save "else" label statement "endif" "action_ifelse"
   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    expression           go to state 91
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 71

   33 iteration_stmt: "while" '(' . expression ')' statement "action_while_loop"
   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    expression           go to state 92
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 72

   34 return_stmt: "return" ';' .

    $default  reduce using rule 34 (return_stmt)


state 73

   35 return_stmt: "return" expression . ';'

    ';'  shift, and go to state 93


state 74

   36 switch_stmt: "switch" '(' . expression ')' '{' case_stmts default_stmt '}'
   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    expression           go to state 94
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 75

   59 call: "output" '(' . output expression ')'
   71 output: . "action_output"

    "action_output"  shift, and go to state 95

    output  go to state 96


state 76

   28 expression_stmt: expression ';' .

    $default  reduce using rule 28 (expression_stmt)


state 77

   42 expression: . var '=' expression
   42           | var '=' . expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    expression           go to state 97
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 78

   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: additive_expression '<' . additive_expression "action_lt"
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    var                  go to state 98
    additive_expression  go to state 99
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 79

   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   47 simple_expression: additive_expression "==" . additive_expression "action_eq"
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    var                  go to state 98
    additive_expression  go to state 100
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 80

   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   49 additive_expression: additive_expression '+' . term "action_add"
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    var         go to state 98
    term        go to state 101
    factor      go to state 62
    call        go to state 63
    push_id     go to state 65
    save_const  go to state 66


state 81

   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   50 additive_expression: additive_expression '-' . term "action_sub"
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    var         go to state 98
    term        go to state 102
    factor      go to state 62
    call        go to state 63
    push_id     go to state 65
    save_const  go to state 66


state 82

   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   52 term: term '*' . factor "action_mult"
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    var         go to state 98
    factor      go to state 103
    call        go to state 63
    push_id     go to state 65
    save_const  go to state 66


state 83

   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   53 term: term '/' . factor "action_div"
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    var         go to state 98
    factor      go to state 104
    call        go to state 63
    push_id     go to state 65
    save_const  go to state 66


state 84

   17 compound_stmt: '{' start_scope local_declarations statement_list end_scope '}' .

    $default  reduce using rule 17 (compound_stmt)


state 85

   44 var: push_id ID .  [';', ']', ')', ',', '=', '<', "action_lt", "==", "action_eq", '+', "action_add", '-', "action_sub", '*', "action_mult", '/', "action_div"]
   45    | push_id ID . '[' expression ']' "action_index_addr"

    '['  shift, and go to state 105

    $default  reduce using rule 44 (var)


state 86

   58 factor: save_const NUM .

    $default  reduce using rule 58 (factor)


state 87

   64 arg_list: expression .

    $default  reduce using rule 64 (arg_list)


state 88

   60 call: ID '(' args . ')'

    ')'  shift, and go to state 106


state 89

   61 args: arg_list .  [')']
   63 arg_list: arg_list . ',' expression

    ','  shift, and go to state 107

    $default  reduce using rule 61 (args)


state 90

   55 factor: '(' expression ')' .

    $default  reduce using rule 55 (factor)


state 91

   31 selection_stmt: "if" '(' expression . ')' save statement "endif" "action_if"
   32               | "if" '(' expression . ')' save statement save "else" label statement "endif" "action_ifelse"

    ')'  shift, and go to state 108


state 92

   33 iteration_stmt: "while" '(' expression . ')' statement "action_while_loop"

    ')'  shift, and go to state 109


state 93

   35 return_stmt: "return" expression ';' .

    $default  reduce using rule 35 (return_stmt)


state 94

   36 switch_stmt: "switch" '(' expression . ')' '{' case_stmts default_stmt '}'

    ')'  shift, and go to state 110


state 95

   71 output: "action_output" .

    $default  reduce using rule 71 (output)


state 96

   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   59     | "output" '(' output . expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    expression           go to state 111
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 97

   42 expression: var '=' expression .

    $default  reduce using rule 42 (expression)


state 98

   56 factor: var .

    $default  reduce using rule 56 (factor)


state 99

   46 simple_expression: additive_expression '<' additive_expression . "action_lt"
   49 additive_expression: additive_expression . '+' term "action_add"
   50                    | additive_expression . '-' term "action_sub"

    "action_lt"  shift, and go to state 112
    '+'          shift, and go to state 80
    '-'          shift, and go to state 81


state 100

   47 simple_expression: additive_expression "==" additive_expression . "action_eq"
   49 additive_expression: additive_expression . '+' term "action_add"
   50                    | additive_expression . '-' term "action_sub"

    "action_eq"  shift, and go to state 113
    '+'          shift, and go to state 80
    '-'          shift, and go to state 81


state 101

   49 additive_expression: additive_expression '+' term . "action_add"
   52 term: term . '*' factor "action_mult"
   53     | term . '/' factor "action_div"

    "action_add"  shift, and go to state 114
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83


state 102

   50 additive_expression: additive_expression '-' term . "action_sub"
   52 term: term . '*' factor "action_mult"
   53     | term . '/' factor "action_div"

    "action_sub"  shift, and go to state 115
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83


state 103

   52 term: term '*' factor . "action_mult"

    "action_mult"  shift, and go to state 116


state 104

   53 term: term '/' factor . "action_div"

    "action_div"  shift, and go to state 117


state 105

   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   45    | push_id ID '[' . expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    expression           go to state 118
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 106

   60 call: ID '(' args ')' .

    $default  reduce using rule 60 (call)


state 107

   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   63 arg_list: arg_list ',' . expression
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    '('                  shift, and go to state 40
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    expression           go to state 119
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 108

   31 selection_stmt: "if" '(' expression ')' . save statement "endif" "action_if"
   32               | "if" '(' expression ')' . save statement save "else" label statement "endif" "action_ifelse"
   69 save: . "action_save"

    "action_save"  shift, and go to state 120

    save  go to state 121


state 109

   17 compound_stmt: . '{' start_scope local_declarations statement_list end_scope '}'
   22 statement: . expression_stmt
   23          | . compound_stmt
   24          | . selection_stmt
   25          | . iteration_stmt
   26          | . return_stmt
   27          | . switch_stmt
   28 expression_stmt: . expression ';'
   29                | . "break" ';'
   30                | . ';'
   31 selection_stmt: . "if" '(' expression ')' save statement "endif" "action_if"
   32               | . "if" '(' expression ')' save statement save "else" label statement "endif" "action_ifelse"
   33 iteration_stmt: . "while" '(' expression ')' statement "action_while_loop"
   33               | "while" '(' expression ')' . statement "action_while_loop"
   34 return_stmt: . "return" ';'
   35            | . "return" expression ';'
   36 switch_stmt: . "switch" '(' expression ')' '{' case_stmts default_stmt '}'
   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    ';'                  shift, and go to state 39
    '('                  shift, and go to state 40
    '{'                  shift, and go to state 27
    "break"              shift, and go to state 41
    "if"                 shift, and go to state 42
    "while"              shift, and go to state 43
    "return"             shift, and go to state 44
    "switch"             shift, and go to state 45
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    compound_stmt        go to state 50
    statement            go to state 122
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    switch_stmt          go to state 56
    expression           go to state 57
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 110

   36 switch_stmt: "switch" '(' expression ')' . '{' case_stmts default_stmt '}'

    '{'  shift, and go to state 123


state 111

   59 call: "output" '(' output expression . ')'

    ')'  shift, and go to state 124


state 112

   46 simple_expression: additive_expression '<' additive_expression "action_lt" .

    $default  reduce using rule 46 (simple_expression)


state 113

   47 simple_expression: additive_expression "==" additive_expression "action_eq" .

    $default  reduce using rule 47 (simple_expression)


state 114

   49 additive_expression: additive_expression '+' term "action_add" .

    $default  reduce using rule 49 (additive_expression)


state 115

   50 additive_expression: additive_expression '-' term "action_sub" .

    $default  reduce using rule 50 (additive_expression)


state 116

   52 term: term '*' factor "action_mult" .

    $default  reduce using rule 52 (term)


state 117

   53 term: term '/' factor "action_div" .

    $default  reduce using rule 53 (term)


state 118

   45 var: push_id ID '[' expression . ']' "action_index_addr"

    ']'  shift, and go to state 125


state 119

   63 arg_list: arg_list ',' expression .

    $default  reduce using rule 63 (arg_list)


state 120

   69 save: "action_save" .

    $default  reduce using rule 69 (save)


state 121

   17 compound_stmt: . '{' start_scope local_declarations statement_list end_scope '}'
   22 statement: . expression_stmt
   23          | . compound_stmt
   24          | . selection_stmt
   25          | . iteration_stmt
   26          | . return_stmt
   27          | . switch_stmt
   28 expression_stmt: . expression ';'
   29                | . "break" ';'
   30                | . ';'
   31 selection_stmt: . "if" '(' expression ')' save statement "endif" "action_if"
   31               | "if" '(' expression ')' save . statement "endif" "action_if"
   32               | . "if" '(' expression ')' save statement save "else" label statement "endif" "action_ifelse"
   32               | "if" '(' expression ')' save . statement save "else" label statement "endif" "action_ifelse"
   33 iteration_stmt: . "while" '(' expression ')' statement "action_while_loop"
   34 return_stmt: . "return" ';'
   35            | . "return" expression ';'
   36 switch_stmt: . "switch" '(' expression ')' '{' case_stmts default_stmt '}'
   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    ';'                  shift, and go to state 39
    '('                  shift, and go to state 40
    '{'                  shift, and go to state 27
    "break"              shift, and go to state 41
    "if"                 shift, and go to state 42
    "while"              shift, and go to state 43
    "return"             shift, and go to state 44
    "switch"             shift, and go to state 45
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    compound_stmt        go to state 50
    statement            go to state 126
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    switch_stmt          go to state 56
    expression           go to state 57
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 122

   33 iteration_stmt: "while" '(' expression ')' statement . "action_while_loop"

    "action_while_loop"  shift, and go to state 127


state 123

   36 switch_stmt: "switch" '(' expression ')' '{' . case_stmts default_stmt '}'
   37 case_stmts: . case_stmts case_stmt
   38           | .

    $default  reduce using rule 38 (case_stmts)

    case_stmts  go to state 128


state 124

   59 call: "output" '(' output expression ')' .

    $default  reduce using rule 59 (call)


state 125

   45 var: push_id ID '[' expression ']' . "action_index_addr"

    "action_index_addr"  shift, and go to state 129


state 126

   31 selection_stmt: "if" '(' expression ')' save statement . "endif" "action_if"
   32               | "if" '(' expression ')' save statement . save "else" label statement "endif" "action_ifelse"
   69 save: . "action_save"

    "endif"        shift, and go to state 130
    "action_save"  shift, and go to state 120

    save  go to state 131


state 127

   33 iteration_stmt: "while" '(' expression ')' statement "action_while_loop" .

    $default  reduce using rule 33 (iteration_stmt)


state 128

   36 switch_stmt: "switch" '(' expression ')' '{' case_stmts . default_stmt '}'
   37 case_stmts: case_stmts . case_stmt
   39 case_stmt: . "case" save_const NUM ':' statement_list
   40 default_stmt: . "default" ':' statement_list
   41             | .  ['}']

    "case"     shift, and go to state 132
    "default"  shift, and go to state 133

    $default  reduce using rule 41 (default_stmt)

    case_stmt     go to state 134
    default_stmt  go to state 135


state 129

   45 var: push_id ID '[' expression ']' "action_index_addr" .

    $default  reduce using rule 45 (var)


state 130

   31 selection_stmt: "if" '(' expression ')' save statement "endif" . "action_if"

    "action_if"  shift, and go to state 136


state 131

   32 selection_stmt: "if" '(' expression ')' save statement save . "else" label statement "endif" "action_ifelse"

    "else"  shift, and go to state 137


state 132

   39 case_stmt: "case" . save_const NUM ':' statement_list
   68 save_const: . "action_save_const"

    "action_save_const"  shift, and go to state 49

    save_const  go to state 138


state 133

   40 default_stmt: "default" . ':' statement_list

    ':'  shift, and go to state 139


state 134

   37 case_stmts: case_stmts case_stmt .

    $default  reduce using rule 37 (case_stmts)


state 135

   36 switch_stmt: "switch" '(' expression ')' '{' case_stmts default_stmt . '}'

    '}'  shift, and go to state 140


state 136

   31 selection_stmt: "if" '(' expression ')' save statement "endif" "action_if" .

    $default  reduce using rule 31 (selection_stmt)


state 137

   32 selection_stmt: "if" '(' expression ')' save statement save "else" . label statement "endif" "action_ifelse"
   70 label: . "action_label"

    "action_label"  shift, and go to state 141

    label  go to state 142


state 138

   39 case_stmt: "case" save_const . NUM ':' statement_list

    NUM  shift, and go to state 143


state 139

   20 statement_list: . statement_list statement
   21               | .
   40 default_stmt: "default" ':' . statement_list

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 144


state 140

   36 switch_stmt: "switch" '(' expression ')' '{' case_stmts default_stmt '}' .

    $default  reduce using rule 36 (switch_stmt)


state 141

   70 label: "action_label" .

    $default  reduce using rule 70 (label)


state 142

   17 compound_stmt: . '{' start_scope local_declarations statement_list end_scope '}'
   22 statement: . expression_stmt
   23          | . compound_stmt
   24          | . selection_stmt
   25          | . iteration_stmt
   26          | . return_stmt
   27          | . switch_stmt
   28 expression_stmt: . expression ';'
   29                | . "break" ';'
   30                | . ';'
   31 selection_stmt: . "if" '(' expression ')' save statement "endif" "action_if"
   32               | . "if" '(' expression ')' save statement save "else" label statement "endif" "action_ifelse"
   32               | "if" '(' expression ')' save statement save "else" label . statement "endif" "action_ifelse"
   33 iteration_stmt: . "while" '(' expression ')' statement "action_while_loop"
   34 return_stmt: . "return" ';'
   35            | . "return" expression ';'
   36 switch_stmt: . "switch" '(' expression ')' '{' case_stmts default_stmt '}'
   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    ';'                  shift, and go to state 39
    '('                  shift, and go to state 40
    '{'                  shift, and go to state 27
    "break"              shift, and go to state 41
    "if"                 shift, and go to state 42
    "while"              shift, and go to state 43
    "return"             shift, and go to state 44
    "switch"             shift, and go to state 45
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    compound_stmt        go to state 50
    statement            go to state 145
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    switch_stmt          go to state 56
    expression           go to state 57
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 143

   39 case_stmt: "case" save_const NUM . ':' statement_list

    ':'  shift, and go to state 146


state 144

   17 compound_stmt: . '{' start_scope local_declarations statement_list end_scope '}'
   20 statement_list: statement_list . statement
   22 statement: . expression_stmt
   23          | . compound_stmt
   24          | . selection_stmt
   25          | . iteration_stmt
   26          | . return_stmt
   27          | . switch_stmt
   28 expression_stmt: . expression ';'
   29                | . "break" ';'
   30                | . ';'
   31 selection_stmt: . "if" '(' expression ')' save statement "endif" "action_if"
   32               | . "if" '(' expression ')' save statement save "else" label statement "endif" "action_ifelse"
   33 iteration_stmt: . "while" '(' expression ')' statement "action_while_loop"
   34 return_stmt: . "return" ';'
   35            | . "return" expression ';'
   36 switch_stmt: . "switch" '(' expression ')' '{' case_stmts default_stmt '}'
   40 default_stmt: "default" ':' statement_list .  ['}']
   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    ';'                  shift, and go to state 39
    '('                  shift, and go to state 40
    '{'                  shift, and go to state 27
    "break"              shift, and go to state 41
    "if"                 shift, and go to state 42
    "while"              shift, and go to state 43
    "return"             shift, and go to state 44
    "switch"             shift, and go to state 45
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    $default  reduce using rule 40 (default_stmt)

    compound_stmt        go to state 50
    statement            go to state 51
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    switch_stmt          go to state 56
    expression           go to state 57
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 145

   32 selection_stmt: "if" '(' expression ')' save statement save "else" label statement . "endif" "action_ifelse"

    "endif"  shift, and go to state 147


state 146

   20 statement_list: . statement_list statement
   21               | .
   39 case_stmt: "case" save_const NUM ':' . statement_list

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 148


state 147

   32 selection_stmt: "if" '(' expression ')' save statement save "else" label statement "endif" . "action_ifelse"

    "action_ifelse"  shift, and go to state 149


state 148

   17 compound_stmt: . '{' start_scope local_declarations statement_list end_scope '}'
   20 statement_list: statement_list . statement
   22 statement: . expression_stmt
   23          | . compound_stmt
   24          | . selection_stmt
   25          | . iteration_stmt
   26          | . return_stmt
   27          | . switch_stmt
   28 expression_stmt: . expression ';'
   29                | . "break" ';'
   30                | . ';'
   31 selection_stmt: . "if" '(' expression ')' save statement "endif" "action_if"
   32               | . "if" '(' expression ')' save statement save "else" label statement "endif" "action_ifelse"
   33 iteration_stmt: . "while" '(' expression ')' statement "action_while_loop"
   34 return_stmt: . "return" ';'
   35            | . "return" expression ';'
   36 switch_stmt: . "switch" '(' expression ')' '{' case_stmts default_stmt '}'
   39 case_stmt: "case" save_const NUM ':' statement_list .  ['}', "case", "default"]
   42 expression: . var '=' expression
   43           | . simple_expression
   44 var: . push_id ID
   45    | . push_id ID '[' expression ']' "action_index_addr"
   46 simple_expression: . additive_expression '<' additive_expression "action_lt"
   47                  | . additive_expression "==" additive_expression "action_eq"
   48                  | . additive_expression
   49 additive_expression: . additive_expression '+' term "action_add"
   50                    | . additive_expression '-' term "action_sub"
   51                    | . term
   52 term: . term '*' factor "action_mult"
   53     | . term '/' factor "action_div"
   54     | . factor
   55 factor: . '(' expression ')'
   56       | . var
   57       | . call
   58       | . save_const NUM
   59 call: . "output" '(' output expression ')'
   60     | . ID '(' args ')'
   67 push_id: . "action_push_id"
   68 save_const: . "action_save_const"

    ID                   shift, and go to state 38
    ';'                  shift, and go to state 39
    '('                  shift, and go to state 40
    '{'                  shift, and go to state 27
    "break"              shift, and go to state 41
    "if"                 shift, and go to state 42
    "while"              shift, and go to state 43
    "return"             shift, and go to state 44
    "switch"             shift, and go to state 45
    "output"             shift, and go to state 46
    "action_push_id"     shift, and go to state 48
    "action_save_const"  shift, and go to state 49

    $default  reduce using rule 39 (case_stmt)

    compound_stmt        go to state 50
    statement            go to state 51
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    switch_stmt          go to state 56
    expression           go to state 57
    var                  go to state 58
    simple_expression    go to state 59
    additive_expression  go to state 60
    term                 go to state 61
    factor               go to state 62
    call                 go to state 63
    push_id              go to state 65
    save_const           go to state 66


state 149

   32 selection_stmt: "if" '(' expression ')' save statement save "else" label statement "endif" "action_ifelse" .

    $default  reduce using rule 32 (selection_stmt)
